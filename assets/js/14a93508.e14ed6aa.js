(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1756],{4137:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(r),d=o,g=p["".concat(c,".").concat(d)]||p[d]||m[d]||a;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},7539:function(e,t,r){"use strict";var n=r(7294),o=(r(7748),function(e){var t=e.children;return n.createElement("div",{style:{backgroundColor:"rgba(255,255,255, .1)",borderRadius:4,color:"#fff",padding:"1.2rem",marginTop:50,display:"flex",alignItems:"center",fontSize:"1.2rem"}},t)});t.Z=function(){return n.createElement(o,null,n.createElement("img",{src:"/img/icon_heart.svg",style:{width:30,height:30,marginRight:20}}),n.createElement("span",null,"Tell us \xa0",n.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"/feature-requests/"},"how to improve"),"\xa0 MetaEditor"))}},7748:function(e){var t="metaeditor";e.exports={namespace:t,homepage:"https://metaeditor.io",repo:{url:"https://github.com/markolofsen/metaeditor",git:"https://github.com/markolofsen/metaeditor.git",issues:"https://github.com/markolofsen/metaeditor/issues"},company:{name:"UnrealOS",url:"https://unrealos.com",email:"team@unrealos.com"},seo:{ogImage:"/img/og_default.jpg",title:"MetaEditor \u2014 Pixel Streaming for Unreal Engine (ReactJS)",description:"MetaEditor streamlines PixelStreaming development to allow businesses to easily deploy and customize their ReactJS application for Unreal Engine."},contacts:{url:"https://unrealos.com/contacts/",discordUrl:"https://discordapp.com/invite/eGHKuQ3BHM",stackoverflowUrl:"https://stackoverflow.com/questions/tagged/metaeditor",twitterUrl:"https://twitter.com/metaeditor"},config:{googleTag:"G-MCJPYV0KFS"},presets:{editUrl:"https://github.com/markolofsen/unrealos_doc/edit/main/"},npmItems:["pixel-streaming","metaeditor"].map((function(e){return{label:e,href:"https://www.npmjs.com/package/"+e}}))}},4655:function(e,t,r){"use strict";r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var n=r(7462),o=r(3366),a=(r(7294),r(4137)),i=r(7539),s=["components"],c={title:"Connecting to a streaming server",sidebar_label:"Streaming"},l=void 0,u={unversionedId:"metaeditor/settings/streaming",id:"metaeditor/settings/streaming",title:"Connecting to a streaming server",description:"Procedure",source:"@site/docs/metaeditor/settings/streaming.md",sourceDirName:"metaeditor/settings",slug:"/metaeditor/settings/streaming",permalink:"/docs/metaeditor/settings/streaming",editUrl:"https://github.com/markolofsen/unrealos_doc/edit/main/docs/metaeditor/settings/streaming.md",tags:[],version:"current",frontMatter:{title:"Connecting to a streaming server",sidebar_label:"Streaming"},sidebar:"someSidebar",previous:{title:"Configuration",permalink:"/docs/metaeditor/settings/config"},next:{title:"Deployment",permalink:"/docs/metaeditor/settings/deployment"}},m={},p=[{value:"Procedure",id:"procedure",level:2},{value:"To automatically get a free streaming server, you need to run your own API server.",id:"to-automatically-get-a-free-streaming-server-you-need-to-run-your-own-api-server",level:2}],d={toc:p};function g(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"procedure"},"Procedure"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Open ",(0,a.kt)("inlineCode",{parentName:"p"},"/src/api/env.js"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Specify the URL (endpoint) of your API server to receive the response (with variable: ",(0,a.kt)("inlineCode",{parentName:"p"},"apiUrl"),")"))),(0,a.kt)("h2",{id:"to-automatically-get-a-free-streaming-server-you-need-to-run-your-own-api-server"},"To automatically get a free streaming server, you need to run your own API server."),(0,a.kt)("p",null,"When MetaEditor starts, it contacts your API-server, which returns the data in the following format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"status: 200,\nbody: {\n\n  status: 'pending', // or: active\n  host: 'https://streamingdomain.com',\n  port: 80,\n  que: 1,\n\n  seconds_to_kill: 0,\n  seconds_to_start: 0,\n\n}\n")),(0,a.kt)(i.Z,{mdxType:"DocsMessage"}))}g.isMDXComponent=!0}}]);