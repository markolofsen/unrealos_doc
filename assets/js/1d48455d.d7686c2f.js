"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[69],{4137:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return u}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function m(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=m(e,["components","mdxType","originalType","parentName"]),p=l(t),u=r,y=p["".concat(s,".").concat(u)]||p[u]||c[u]||o;return t?a.createElement(y,i(i({ref:n},d),{},{components:t})):a.createElement(y,i({ref:n},d))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=p;var m={};for(var s in n)hasOwnProperty.call(n,s)&&(m[s]=n[s]);m.originalType=e,m.mdxType="string"==typeof e?e:r,i[1]=m;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9752:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return m},metadata:function(){return l},toc:function(){return c}});var a=t(7462),r=t(3366),o=(t(7294),t(4137)),i=["components"],m={title:"Pixel Streaming Commands",sidebar_label:"Commands"},s=void 0,l={unversionedId:"metaeditor/methods/commands",id:"metaeditor/methods/commands",title:"Pixel Streaming Commands",description:"This page shows an example of sending a command from MetaEditor to Unreal Engine.",source:"@site/docs/metaeditor/methods/commands.md",sourceDirName:"metaeditor/methods",slug:"/metaeditor/methods/commands",permalink:"/docs/metaeditor/methods/commands",tags:[],version:"current",frontMatter:{title:"Pixel Streaming Commands",sidebar_label:"Commands"},sidebar:"someSidebar",previous:{title:"Module update",permalink:"/docs/metaeditor/settings/update"},next:{title:"Portal Commands",permalink:"/docs/metaeditor/methods/commands_portal"}},d={},c=[{value:"Async Commands",id:"async-commands",level:2},{value:"System Commands",id:"system-commands",level:2},{value:"Commands Body",id:"commands-body",level:2}],p={toc:c};function u(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This page shows an example of sending a command from MetaEditor to Unreal Engine."),(0,o.kt)("p",{parentName:"div"},"Your Application should be wrapped in ",(0,o.kt)("a",{parentName:"p",href:"/docs/metaeditor/settings/context_provider"},"ContextProvider")))),(0,o.kt)("h2",{id:"async-commands"},"Async Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/AsyncCommands.tsx"',title:'"src/AsyncCommands.tsx"'},"import React from 'react'\n\n// ui\nimport Button from 'rsuite/Button'\n\n// libs\nimport { usePlayer } from 'pixel-streaming'\n\n\nexport const CommandsAsync: React.FC<any> = () => {\n  const player = usePlayer()\n\n  const [disabled, setDisabled] = React.useState<boolean>(false)\n\n  const emitAsyncCommand = (commandName: string, value: any) => async () => {\n    setDisabled(true)\n    await player.cls.emitAsyncCommand(commandName, value).then((res: any) => {\n      if (res) {\n        console.log('@@@callback', JSON.stringify(res, null, 4))\n      }\n    })\n    setDisabled(false)\n  }\n\n  return (\n    <div>\n\n      <h5>\n        Async Commands\n      </h5>\n\n      <div data-actions>\n        <Button appearance='primary' disabled={disabled} onClick={emitAsyncCommand('switchvariant', { set: 0, index: 2 })}>\n          Color: white\n        </Button>\n        <Button appearance='primary' disabled={disabled} onClick={emitAsyncCommand('switchvariant', { set: 0, index: 1 })}>\n          Color: black\n        </Button>\n      </div>\n\n    </div>\n  )\n}\n")),(0,o.kt)("h2",{id:"system-commands"},"System Commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/SystemCommands.tsx"',title:'"src/SystemCommands.tsx"'},"import React from 'react'\n\n// ui\nimport Button from 'rsuite/Button'\n\n// libs\nimport { usePlayer } from 'pixel-streaming'\n\nexport const CommandsSystem: React.FC<any> = () => {\n  const player = usePlayer()\n\n  const emitCommandSystem = (commandName: string, value: any) => async () => {\n    player.cls.emitCommandSystem(commandName, value)\n  }\n\n  return (\n    <div>\n\n      <h5>\n        System Commands\n      </h5>\n\n      <div data-actions>\n        <Button appearance='primary' onClick={emitCommandSystem('debug_mode', { mode: 'off' })}>\n          Debug: off\n        </Button>\n        <Button appearance='primary' onClick={emitCommandSystem('debug_mode', { mode: 'on' })}>\n          Debug: on\n        </Button>\n      </div>\n\n    </div>\n  )\n}\n")),(0,o.kt)("h2",{id:"commands-body"},"Commands Body"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Keys"),(0,o.kt)("th",{parentName:"tr",align:null},"Format"),(0,o.kt)("th",{parentName:"tr",align:null},"Default value"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"command")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"string")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"The unique command name that Unreal Engine will receive.",(0,o.kt)("br",null),"Type: ",(0,o.kt)("inlineCode",{parentName:"td"},"slug")," (lowercase, no spaces)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"request.body")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"json")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"{}")),(0,o.kt)("td",{parentName:"tr",align:null},"An object with the data that Unreal Engine will receive as the contents of the command.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"verification_id")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"string")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined")),(0,o.kt)("td",{parentName:"tr",align:null},"This is the unique identifier for the command. With it, you can distinguish between two identical commands sent to the Unreal Engine.",(0,o.kt)("br",null),(0,o.kt)("br",null),"If you specify ",(0,o.kt)("inlineCode",{parentName:"td"},'undefined"'),", then MetaEditor will automatically assign a sequence number.")))))}u.isMDXComponent=!0}}]);