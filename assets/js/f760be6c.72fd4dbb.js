"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6655],{3905:function(n,e,r){r.d(e,{Zo:function(){return u},kt:function(){return d}});var t=r(67294);function o(n,e,r){return e in n?Object.defineProperty(n,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):n[e]=r,n}function i(n,e){var r=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.push.apply(r,t)}return r}function l(n){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){o(n,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))}))}return n}function a(n,e){if(null==n)return{};var r,t,o=function(n,e){if(null==n)return{};var r,t,o={},i=Object.keys(n);for(t=0;t<i.length;t++)r=i[t],e.indexOf(r)>=0||(o[r]=n[r]);return o}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(t=0;t<i.length;t++)r=i[t],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(n,r)&&(o[r]=n[r])}return o}var s=t.createContext({}),c=function(n){var e=t.useContext(s),r=e;return n&&(r="function"==typeof n?n(e):l(l({},e),n)),r},u=function(n){var e=c(n.components);return t.createElement(s.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return t.createElement(t.Fragment,{},e)}},p=t.forwardRef((function(n,e){var r=n.components,o=n.mdxType,i=n.originalType,s=n.parentName,u=a(n,["components","mdxType","originalType","parentName"]),p=c(r),d=o,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return r?t.createElement(f,l(l({ref:e},u),{},{components:r})):t.createElement(f,l({ref:e},u))}));function d(n,e){var r=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var i=r.length,l=new Array(i);l[0]=p;var a={};for(var s in e)hasOwnProperty.call(e,s)&&(a[s]=e[s]);a.originalType=n,a.mdxType="string"==typeof n?n:o,l[1]=a;for(var c=2;c<i;c++)l[c]=r[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},88212:function(n,e,r){r.r(e),r.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return m}});var t=r(87462),o=r(63366),i=(r(67294),r(3905)),l=["components"],a={title:"Formik",sidebar_label:"Formik"},s=void 0,c={unversionedId:"custom/metalib/components/formik",id:"custom/metalib/components/formik",title:"Formik",description:"Formik",source:"@site/docs/custom/metalib/components/formik.md",sourceDirName:"custom/metalib/components",slug:"/custom/metalib/components/formik",permalink:"/docs/custom/metalib/components/formik",tags:[],version:"current",frontMatter:{title:"Formik",sidebar_label:"Formik"},sidebar:"someSidebar",previous:{title:"Libs",permalink:"/docs/custom/metalib/libs"},next:{title:"MUI helper",permalink:"/docs/custom/mui/helper"}},u={},m=[{value:"Formik",id:"formik",level:3}],p={toc:m};function d(n){var e=n.components,r=(0,o.Z)(n,l);return(0,i.kt)("wrapper",(0,t.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"formik"},"Formik"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import * as React from \'react\';\n\n// components\nimport {Formik, Fields, Block} from \'metalib/components/Formik/\'\n\n// material\nimport Button from \'@mui/material/Button\';\n\n\nexport default function Form() {\n  const refFormik = React.useRef(null)\n\n  const onValidate = async (values) => {\n    // ...\n  }\n\n  const onRead = async () => {\n    // await\n  }\n\n  const onSubmit = async (values) => {\n    // await\n  }\n\n  const onSuccess = () => {\n    // ...\n  }\n\n  const renderFields = ({ errors, submitForm, isSubmitting, values, ...payload }) => {\n\n    return (\n      <>\n\n        <Block.FormGroup label="Group" isClosed>\n\n          <Fields.FieldAddress\n            label="Address"\n            name="address"\n            errors={errors}\n          />\n\n          <Fields.FieldCheckbox\n            label="Checkbox"\n            name="check"\n            errors={errors}\n          />\n\n          <Fields.FieldSlider\n            label="Slider"\n            name="slider"\n            errors={errors}\n          />\n\n          <Fields.FieldColor\n            label="Color"\n            name="color"\n            errors={errors}\n          />\n\n          <Fields.FieldAutocomlete\n            label="Category"\n            name="category"\n            required\n            errors={errors}\n            helperText="One"\n            renderOption={(option) => option.label}\n            options={[\n              {\n                label: \'Demo\',\n                value: \'v\',\n              },\n            ]}\n            limitOptions={50}\n            InputProps={{\n              startAdornment: \'$\',\n            }}\n          />\n\n          <Fields.FieldSelect\n            label="Category"\n            name="category"\n            required\n            errors={errors}\n            helperText="One"\n            renderOption={(option) => option.label}\n            options={[\n              {\n                label: \'Demo\',\n                value: \'v\',\n              },\n            ]}\n          />\n\n          <Fields.FieldText\n            label="Title"\n            name="title"\n            type="text"\n            required\n            errors={errors}\n            helperText="Some"\n            InputProps={{\n\n            }}\n          />\n        </Block.FormGroup>\n\n        <Fields.FieldText\n          label="Description"\n          name="description"\n          type="textarea"\n          required\n          errors={errors}\n          InputProps={{\n\n          }}\n        />\n\n        <Block.RowGroup>\n          <Fields.FieldPhone\n            label="Phone"\n            name="phone"\n            required\n            errors={errors}\n            InputProps={{\n\n            }}\n          />\n\n          <Fields.FieldDate\n            label="Date"\n            name="date"\n            type="datetime"\n            required\n            errors={errors}\n          />\n        </Block.RowGroup>\n\n\n        <Block.Actions>\n          <Button\n            type="submit"\n            variant="contained"\n            color="primary"\n            disabled={isSubmitting}\n            onClick={submitForm}\n          >\n            Submit\n          </Button>\n        </Block.Actions>\n\n      </>\n    )\n  }\n\n  return (\n    <Formik\n      ref={refFormik}\n      initialValues={{\n        title: \'\',\n        phone: \'\',\n        description: \'\',\n        category: \'\',\n      }}\n      onSuccess={onSuccess}\n      onRead={onRead}\n      onSubmit={onSubmit}\n      onValidate={onValidate}\n      children={renderFields} />\n  )\n}\n\n')))}d.isMDXComponent=!0}}]);